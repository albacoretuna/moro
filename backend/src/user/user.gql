input UserInput {
  email: String!
  name: String
  password: String
}

input CredentialsInput {
  email: String!
  password: String
}

input EmailInput {
  email: String!
}

input NewPasswordInput {
  email: String!
  password: String!
  token: String!
}

type User {
  id: Int
  email: String
  name: String
}

type AuthResult {
  success: Boolean
  token: String
  message: String
}

type Query {
  user: User
  users: [User]
}

type Mutation {
  createUser(user: UserInput!): User
  register(user: UserInput!): AuthResult
  login(credentials: CredentialsInput!): AuthResult
  forgotPassword(credentials: EmailInput!): AuthResult
  resetPassword(credentials: NewPasswordInput!): AuthResult
}
